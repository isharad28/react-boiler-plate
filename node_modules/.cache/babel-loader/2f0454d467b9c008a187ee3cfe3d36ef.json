{"ast":null,"code":"var _jsxFileName = \"/Users/sharadchoudhary/Desktop/PracticeReactJsProject/fastie/src/View/ViewDrawer.js\";\nimport React from 'react';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton, useDisclosure, Flex, Box, Spacer, Text, Stack, Radio, RadioGroup, CheckboxGroup, Checkbox } from \"@chakra-ui/react\";\nimport ProductCustomizationDrawer from '../Container/ProductCustomizationDrawer/ProductCustomizationDrawer';\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewDrawer = () => {\n  const data = [{\n    id: 1,\n    type: 'radio',\n    name: 'Extra Cheese',\n    customisationTag: 'SELECT ANY ONE'\n  }, {\n    id: 1,\n    type: 'radio',\n    name: 'Extra Cheese',\n    customisationTag: 'SELECT ANY ONE'\n  }, {\n    id: 1,\n    type: 'checkbox',\n    name: 'Extra Cheese',\n    customisationTag: 'SELECT EXTRAS'\n  }, {\n    id: 1,\n    type: 'checkbox',\n    name: 'Extra Cheese',\n    customisationTag: 'SELECT EXTRAS'\n  }, {\n    id: 1,\n    type: 'radio',\n    name: 'Extra Cheese',\n    customisationTag: 'SELECT ANY ONE'\n  }, {\n    id: 1,\n    type: 'radio',\n    name: 'Extra Cheese',\n    customisationTag: 'SELECT ANY ONE'\n  }];\n\n  let groupData = _.groupBy(data, \"customisationTag\");\n\n  console.log(groupData, \"groupData\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ProductCustomizationDrawer, {\n      children: Object.keys(groupData).map((customisationTag, index) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            my: \"25px\",\n            fontWeight: \"extrabold\",\n            children: customisationTag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            children: groupData[customisationTag].map((data, index) => {\n              if (data.type == \"radio\") {\n                return (\n                  /*#__PURE__*/\n                  // <RadioGroup defaultValue={1}>\n                  //  \n                  _jsxDEV(Radio, {\n                    value: data.id,\n                    colorScheme: \"green\",\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      children: data.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 60\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 17\n                  }, this) //   </Stack>\n                  // </RadioGroup>\n\n                );\n              }\n\n              if (data.type == \"checkbox\") {\n                return (\n                  /*#__PURE__*/\n                  // <CheckboxGroup colorScheme=\"green\" defaultValue={[\"naruto\", \"kakashi\"]}>\n                  // <Stack>\n                  _jsxDEV(Checkbox, {\n                    value: \"naruto\",\n                    children: data.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 15\n                  }, this) //   </Stack>\n                  // </CheckboxGroup>\n\n                );\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c = ViewDrawer;\nexport default ViewDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDrawer\");","map":{"version":3,"sources":["/Users/sharadchoudhary/Desktop/PracticeReactJsProject/fastie/src/View/ViewDrawer.js"],"names":["React","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","useDisclosure","Flex","Box","Spacer","Text","Stack","Radio","RadioGroup","CheckboxGroup","Checkbox","ProductCustomizationDrawer","_","ViewDrawer","data","id","type","name","customisationTag","groupData","groupBy","console","log","Object","keys","map","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  useDisclosure,\n  Flex, Box, Spacer, Text, Stack, Radio, RadioGroup, CheckboxGroup, Checkbox,\n} from \"@chakra-ui/react\"\nimport ProductCustomizationDrawer from '../Container/ProductCustomizationDrawer/ProductCustomizationDrawer'\nimport _ from \"lodash\";\nconst ViewDrawer = () => {\n  const data=[\n    {id:1,type:'radio',name:'Extra Cheese',customisationTag:'SELECT ANY ONE'},\n    {id:1,type:'radio',name:'Extra Cheese',customisationTag:'SELECT ANY ONE'},\n    {id:1,type:'checkbox',name:'Extra Cheese',customisationTag:'SELECT EXTRAS'},\n    {id:1,type:'checkbox',name:'Extra Cheese',customisationTag:'SELECT EXTRAS'},\n    {id:1,type:'radio',name:'Extra Cheese',customisationTag:'SELECT ANY ONE'},\n    {id:1,type:'radio',name:'Extra Cheese',customisationTag:'SELECT ANY ONE'},\n  ]\n  let groupData = _.groupBy(data, \"customisationTag\");\n  console.log(groupData,\"groupData\")\n  return (\n    <>\n  \n    <ProductCustomizationDrawer>\n       {Object.keys(groupData).map((customisationTag,index)=>{\n         \n         return(\n            <Box>\n            <Text my=\"25px\" fontWeight=\"extrabold\">{customisationTag}</Text>\n            <Stack>\n            {groupData[customisationTag].map((data,index)=>{\n              if(data.type==\"radio\"){\n              return(\n            // <RadioGroup defaultValue={1}>\n            //  \n                <Radio value={data.id} colorScheme=\"green\"><Text>{data.name}</Text> </Radio>\n            //   </Stack>\n            // </RadioGroup>\n           )}\n           if(data.type==\"checkbox\"){\n             return(\n            // <CheckboxGroup colorScheme=\"green\" defaultValue={[\"naruto\", \"kakashi\"]}>\n            // <Stack>\n              <Checkbox value=\"naruto\">{data.name}</Checkbox>\n          //   </Stack>\n          // </CheckboxGroup>\n          )\n           }\n           })}\n           </Stack>\n          </Box>\n          )\n       })}\n      </ProductCustomizationDrawer>\n    </>\n  )\n}\n\nexport default ViewDrawer\n"]},"metadata":{},"sourceType":"module"}