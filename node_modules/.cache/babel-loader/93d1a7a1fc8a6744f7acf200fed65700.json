{"ast":null,"code":"import axios from 'axios';\nimport { getToken } from '../../utils/token';\nconst configuration = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': ['Origin', 'Accept', 'X-Requested-With', 'Content-Type', 'Authorization']\n  }\n};\ndebugger;\nconst instance = axios.create({\n  configuration\n});\ninstance.interceptors.request.use(config => {\n  // const oAuthTokan = localStorage.getItem('token') || null;\n  debugger;\n  const token = getToken() || null;\n  let newHeaders = config.headers;\n\n  if (token) {\n    debugger;\n    newHeaders = Object.assign({}, newHeaders, {\n      Authorization: `Bearer ${token}`\n    });\n  }\n\n  debugger;\n  return Object.assign({}, config, {\n    headers: newHeaders\n  });\n}, error => Promise.reject(error));\n\nconst getAxios = () => instance;\n\nexport default getAxios;","map":{"version":3,"sources":["/Users/sharadchoudhary/Desktop/PracticeReactJsProject/PAM-fastie/src/Store/saga/axiosAPI.js"],"names":["axios","getToken","configuration","headers","Accept","instance","create","interceptors","request","use","config","token","newHeaders","Object","assign","Authorization","error","Promise","reject","getAxios"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,kBADD;AAEP,oBAAgB,kBAFT;AAGP,oCAAgC,iCAHzB;AAIP,oCAAgC,CAC9B,QAD8B,EACpB,QADoB,EACV,kBADU,EACU,cADV,EAC0B,eAD1B;AAJzB;AADW,CAAtB;AAUA;AACA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa;AAAEJ,EAAAA;AAAF,CAAb,CAAjB;AAEAG,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5C;AACA;AAEA,QAAMC,KAAK,GAAGV,QAAQ,MAAM,IAA5B;AACA,MAAIW,UAAU,GAAGF,MAAM,CAACP,OAAxB;;AACA,MAAIQ,KAAJ,EAAW;AACT;AACAC,IAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,UAAlB,EAA8B;AAAEG,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAjC,KAA9B,CAAb;AACD;;AACD;AAEA,SAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,EAA0B;AAAEP,IAAAA,OAAO,EAAES;AAAX,GAA1B,CAAP;AACD,CAbD,EAaII,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAbd;;AAeA,MAAMG,QAAQ,GAAG,MAAMd,QAAvB;;AAEA,eAAec,QAAf","sourcesContent":["import axios from 'axios';\nimport {getToken} from '../../utils/token';\n\nconst configuration = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': [\n      'Origin', 'Accept', 'X-Requested-With', 'Content-Type', 'Authorization'\n    ]\n  }\n};\ndebugger\nconst instance = axios.create({ configuration });\n\ninstance.interceptors.request.use((config) => {\n  // const oAuthTokan = localStorage.getItem('token') || null;\n  debugger\n\n  const token = getToken() || null;\n  let newHeaders = config.headers;\n  if (token) {\n    debugger\n    newHeaders = Object.assign({}, newHeaders, { Authorization: `Bearer ${token}` });\n  }\n  debugger\n\n  return Object.assign({}, config, { headers: newHeaders });\n}, (error) => Promise.reject(error));\n\nconst getAxios = () => instance;\n\nexport default getAxios;"]},"metadata":{},"sourceType":"module"}